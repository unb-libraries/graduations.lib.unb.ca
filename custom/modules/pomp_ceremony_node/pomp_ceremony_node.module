<?php

/**
 * @file
 * Contains pomp_ceremony_node.module.
 */

/**
 * Implements hook_theme().
 */
function pomp_ceremony_node_theme($existing, $type, $theme, $path) {
  return [
    'node__honorary_ceremony' => [
      'arguments' => [
        'view' => NULL,
        'field' => NULL,
        'row' => NULL,
        'output' => NULL,
      ],
      'template' => 'node--honorary-ceremony',
      'path' => drupal_get_path('module', 'pomp_ceremony_node') . '/templates',
      'base hook' => 'node__honorary_ceremony',
    ],
  ];
}

/**
 * Implements hook_preprocess_hook().
 */
function pomp_ceremony_node_preprocess_node__honorary_ceremony(&$variables) {
  $node = $variables['elements']['#node'];
  $variables['id'] = $node->id();

  $year = $node->field_ceremony_year->value;
  $variables['year'] = (string) $year;

  $camp_id = $node->field_list_campus[0]->getValue()['target_id'];
  $variables['campus'] = taxonomy_term_load($camp_id)->getName();

  $type_id = $node->field_list_ceremony_type[0]->getValue()['target_id'];
  $variables['ceremony'] = taxonomy_term_load($type_id)->getName();

  $variables['notes'] = $node->field_ceremony_notes->value;

  $degrees_table = views_embed_view('list_ceremony_degrees', 'block_1', $node->id());
  $variables['degrees_output'] = \Drupal::service('renderer')->render($degrees_table);

  $addresses_table = views_embed_view('list_ceremony_addresses', 'block_1', $node->id());
  $variables['addresses_output'] = \Drupal::service('renderer')->render($addresses_table);
}

/**
 * Implements hook_node_delete().
 * Delete all dependant content on ceremony delete.
 */
function pomp_ceremony_node_node_delete($node) {

  // Only apply to graduation ceremony nodes.
  if ($node->bundle() == 'honorary_ceremony') {
    // Delete dependant honorary degrees.
    $degrees = $node->get('field_ref_ceremony_degree')->getValue();

    foreach ($degrees as $degree) {

      $deg_node = Node::load($degree['target_id']);
      $deg_node->delete();
    }

    unset($degree);
    unset($degrees);

    // Delete dependant addresses.
    $addresses = $node->get('field_ref_ceremony_address')->getValue();

    foreach ($addresses as $address) {

      $add_node = Node::load($address['target_id']);
      $add_node->delete();
    }

    unset($address);
    unset($addresses);

    // Delete dependant professor emeriti.
    $addresses = $node->get('field_ref_ceremony_emeritus')->getValue();

    foreach ($emeriti as $emeritus) {

      $emeritus_node = Node::load($emeritus['target_id']);
      $emeritus_node->delete();
    }

    unset($emeritus);
    unset($emeriti);
  }
}
