<?php

/**
 * @file
 * Contains award.module.
 */

use Drupal\taxonomy\Entity\Term;

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 * Alter award IEF.
 */
function award_inline_entity_form_entity_form_alter(&$entity_form, $form_state) {
  // Only apply changes if the entity is an address.
  if ($entity_form['#bundle'] == 'award') {
    // Recover term ids for all award types.
    $tids = \Drupal::entityQuery('taxonomy_term')
      ->condition('vid', 'award_type')
      ->execute();

    // Build associative array with name => tid for award types.
    $types = [];

    foreach ($tids as $tid) {
      $name = Term::load($tid)->getName();
      $types[$name] = $tid;
    }

    // Form states — Display exclusive fields for graduate award.
    $disp_grad_award = [
      'visible' => [
        ':input[name*="field_award_type"]' => ['value' => $types['Graduate Award']],
      ],
    ];

    $entity_form['field_grad_award_type']['#states'] = $disp_grad_award;

    // Form states — Display exclusive fields for honorary degree.
    $disp_hon_degree = [
      'visible' => [
        ':input[name*="field_award_type"]' => ['value' => $types['Honorary Degree']],
      ],
    ];

    $entity_form['field_honorary_degree']['#states'] = $disp_hon_degree;
    $entity_form['field_recipient_valedictorian']['#states'] = $disp_hon_degree;
    $entity_form['field_recipient_gender']['#states'] = $disp_hon_degree;
    $entity_form['field_orator_name']['#states'] = $disp_hon_degree;

    // Form states — Display exclusive fields for faculty award.
    $disp_fac_award = [
      'visible' => [
        ':input[name*="field_award_type"]' => ['value' => $types['Faculty Award/Honour']],
      ],
    ];

    $entity_form['field_faculty_award_type']['#states'] = $disp_fac_award;

    // Form states — Display for group 1: Honorary Degree, Professor Emeritus.
    $disp_group1 = [
      'visible' => [
        [':input[name*="field_award_type"]' => ['value' => $types['Honorary Degree']]],
        [':input[name*="field_award_type"]' => ['value' => $types['Professor Emeritus']]],
      ],
    ];

    $entity_form['field_image']['#states'] = $disp_group1;
    $entity_form['field_image_caption']['#states'] = $disp_group1;
    $entity_form['field_image_caption2']['#states'] = $disp_group1;
    $entity_form['field_citation']['#states'] = $disp_group1;

    // Add callback function to run when IEF is building an address entity.
    $entity_form['#entity_builders'][] = 'award_title';
  }
}

function award_title($entity_type, $entity, $entity_form, &$form_state) {
  $type = $entity->get('field_award_type')->entity->getName();
  $recipient = $entity->get('field_recipient')->getString();

  switch ($type) {
    case 'Faculty Award/Honour':
      // If faculty award...
      $subtype = $entity->get('field_faculty_award_type')->entity->getName();
      $title = "$subtype awarded to $recipient";
      break;

    case 'Graduate Award':
      // If graduate award...
      $subtype = $entity->get('field_grad_award_type')->entity->getName();
      $title = "$subtype awarded to $recipient";
      break;

    case 'Honorary Degree':
      // If honorary degree...
      $subtype = $entity->get('field_honorary_degree')->entity->getName();
      $title = "Honorary Degree awarded to $recipient ($subtype)";
      break;

    default:
      $title = "$type awarded to $recipient";
      break;
  }

  $entity->setTitle($title);
}
